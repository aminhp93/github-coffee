/* eslint-disable @typescript-eslint/no-require-imports */

const fs = require("fs");
const path = require("path");
const matter = require("gray-matter");

const featuresDir = path.join(process.cwd(), "public", "docs", "features");
const outputFile = path.join(featuresDir, "index.md");

function gatherFeatures() {
  return fs
    .readdirSync(featuresDir)
    .filter((file) => file.endsWith(".md") && file !== "index.md")
    .map((file) => {
      const raw = fs.readFileSync(path.join(featuresDir, file), "utf8");
      const { data } = matter(raw);
      return {
        name: data.title,
        description: data.description,
        ready: data.ready,
      };
    });
}

function buildFeaturesTable(features) {
  // Add comments to the top of the file notice that this file is auto-generated

  const header = `<!--\nThis file is auto-generated by scripts/build-feature-list.js\nDo not edit this file directly.\n-->\n\n`;
  const footer = `\n\n<!--\nThis file is auto-generated by scripts/build-feature-list.js\nDo not edit this file directly.\n-->`;

  let md = `| Name | Description | Ready |\n`;
  md += `| --- | --- | --- |\n`;
  features.forEach((f) => {
    md += `| ${f.name} | ${f.description} | ${f.ready} |\n`;
  });
  return header + md + footer;
}

function main() {
  const features = gatherFeatures();
  const tableMarkdown = buildFeaturesTable(features);
  fs.writeFileSync(outputFile, tableMarkdown, "utf8");
  console.log(`Generated table: ${outputFile}`);
}

main();
